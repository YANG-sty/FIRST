<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>FIRST</artifactId>
        <groupId>com.sys.gree</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>first-web</artifactId>
    <packaging>jar</packaging>
    <name>first-web</name>

    <!-- docker 版本 + 服务器地址 -->
    <properties>
        <docker.plugin.version>1.2.0</docker.plugin.version>
        <docker.registry.url>127.0.0.1</docker.registry.url>
    </properties>

    <dependencies>
        <!-- 引入 service 模块，该模块已经引入了 common 模块的pom 所以这里不用再次进行引入 -->
        <dependency>
            <groupId>com.sys.gree</groupId>
            <artifactId>first-service</artifactId>
        </dependency>


        <!-- https://mvnrepository.com/artifact/com.github.theborakompanioni/thymeleaf-extras-shiro -->
        <!-- shiro thymeleaf 整和 -->
        <dependency>
            <groupId>com.github.theborakompanioni</groupId>
            <artifactId>thymeleaf-extras-shiro</artifactId>
            <version>2.0.0</version>
        </dependency>

        <!-- redis -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
<!--            <version>3.4.0</version>-->
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


        <!-- jasypt -->

        <!-- web 模块需要的其他jar包 -->
        <!-- 权限控制 shiro -->
        <dependency>
            <groupId>net.mingsoft</groupId>
            <artifactId>shiro-freemarker-tags</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.alibaba</groupId>
                    <artifactId>fastjson</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.mail</groupId>
                    <artifactId>javax.mail</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>zTree</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>RELEASE</version>
            <scope>compile</scope>
        </dependency>


    </dependencies>



    <build>
        <plugins>
            <!-- maven docker -->
            <!--<plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.plugin.version}</version>
                <configuration>
                    &lt;!&ndash; imageName:镜像的名称 可以通过${project.groupId}/${project.artifactId}:${project.version} 动态制定镜像名称 &ndash;&gt;
                    <imageName>${docker.registry.url}/first/${project.name}:${project.version}</imageName>
                    &lt;!&ndash;baseImage: 基础镜像，这里是相当于Dockerfile的FROM java&ndash;&gt;
&lt;!&ndash;                    <baseImage>java</baseImage>&ndash;&gt;
                    &lt;!&ndash; entrypoint去运行这个jar &ndash;&gt;
&lt;!&ndash;                    <entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>&ndash;&gt;
                    &lt;!&ndash; copy the service's jar file from target into the root directory of the image &ndash;&gt;
                    <dockerDirectory>${project.basedir}</dockerDirectory>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                    <serverId>docker-hub</serverId>
                    <registryUrl>https://index.docker.io/v1/</registryUrl>
                </configuration>


            </plugin>-->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <!-- 防止打包的时候对 excle 进行强制转码，避免打包后乱码 -->
                    <nonFilteredFileExtensions>xls</nonFilteredFileExtensions>
                    <nonFilteredFileExtensions>xlsx</nonFilteredFileExtensions>
                    <nonFilteredFileExtensions>dat</nonFilteredFileExtensions>
                    <nonFilteredFileExtensions>eot</nonFilteredFileExtensions>
                    <nonFilteredFileExtensions>ttf</nonFilteredFileExtensions>
                    <nonFilteredFileExtensions>woff</nonFilteredFileExtensions>
                    <nonFilteredFileExtensions>svg</nonFilteredFileExtensions>
                    <nonFilteredFileExtensions>docx</nonFilteredFileExtensions>
                    <nonFilteredFileExtensions>pdf</nonFilteredFileExtensions>
                </configuration>
            </plugin>

            <!-- springboot maven 插件 -->
            <plugin>
                <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-maven-plugin -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.3.5.RELEASE</version>
                <configuration>
                    <mainClass>com.gree.GreeFIRSTApplication</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- springboot war 包插件 -->
            <plugin>
                <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-war-plugin -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <warName>GreeFirst</warName>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>